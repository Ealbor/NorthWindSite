<!--Header for View-->
<div class="jumobtron">
    <h1 class="my-4 text-center">
        <b>Global Customers</b>
    </h1>


    <!--Chart Space-->
    <div class="container my-3">
        <div class="row">
            <div id="toHide"class="col-4">

            <!--The script completes this ending table tag-->  
            </table>
            </div>

            <div class="col-8">
                <canvas id="myChart" width="100" height="80"></canvas>
            </div>
        </div>
    </div>
</div>




    <!--Script section tag here allows us to use a script and not have the _Layout conflict -->
    @section scripts
        {
        <script>

            //Variables for DATA manipulation
            var countryNames = [];                  //Array to hold JSON Country Names
            var customerNumbers = [];               //Array to hold JSON Customer Count
            var randomColors = [];                  //array to hold randomColors in RGBA format
            function randomBarColor() {             //RandomColor generator
                var o = Math.round;
                var r = Math.random;
                var s = 255;
                return 'rgba(' + o(r() * s) + ', '
                    + o(r() * s) + ', '
                    + o(r() * s) + ', '
                    + 0.8 + ')';
            }
            
                
            


            //This code establishes the view upon load.
            $(function () {                                                         //This will be called asap
                getData();                                                              //gets called
                function getData() {                                                    //definition of that called
                    $.getJSON({
                        //async: false,
                        url: "../../reports/globalCustomers",                           //Route specified in Reports Controller
                        success: function (response, textStatus, jqXhr) {

                            $("#toHide").append("<table class=\"table  table-sm\"><thead><tr><th scope=\"col\">Key</th><th scope=\"col\">Country</th><th scope=\"col\">Count</th></tr></thead><tbody id=\"tableBody\"></tbody>");


                            for (var i = 0; i < response.length; i++) {                 //Looping through JSON response to populate arrays
                                countryNames.push(response[i].country);
                                customerNumbers.push(response[i].numCompanies);
                                randomColors.push(randomBarColor());

                                //This code will populate the chart
                                $("table").append("<tr><th scope = \"row\"> <button type=\"button\" id=\"" + [i] + "\"  class=\"btn\" style=\"background-color:" + randomColors[i] + " !important\" ></button></th ><td>" + response[i].country + "</td><td>" + response[i].numCompanies + "</td></tr >");
                            }

                            console.log(countryNames[0]);

                            //Hides the table then fades it in
                            $("#toHide").hide().fadeIn(4000);

                            
                            var ctx = $('#myChart');                                    //Grab HTML Canvas element
                            var myChart = new Chart(ctx, {                              //Instantiate Chart object
                                type: "bar",                                            //Specify the type of chart ('line', 'bar', 'radar', 'doughnut', 'pie', 'polar area', 'bubble, 'scatter')
                                data: {
                                    labels: countryNames,                               //X-axis for the bar graph, accepts String[]
                                    datasets: [{
                                        label: "Number of Customers by Country",        //Title of Legend
                                        data: customerNumbers,                          //Y-Axis Data, accepts Int[]
                                        backgroundColor: randomColors,                  //Color of the "bars", accepts [] of RGBA
                                        borderColor: randomColors,                      //Color of the "bar" borders, accepts [] of RGBA
                                        borderWidth: 3                                  //Accepts int
                                    }]
                                },
                                options: {
                                    scales: {
                                        xAxes:
                                            [{
                                                barPercentage: .5,                          //Percentage of width on edge of bar
                                                categoryPercentage: 0.5                     //Percentage of width in the middle of bar
                                            }],
                                        yAxes:
                                            [{
                                                ticks: {
                                                    beginAtZero: true
                                                }
                                            }]
                                    },
                                    animation: {
                                        duration: 4000,                                 //Milliseconds to determine animation speed
                                        easing: 'linear'                           //Variety of Animations ('linear', easeInQuad', easeInElastic', 30 different animations)
                                    },
                                    legend: {
                                        display: true,
                                        position: 'top'
                                    },
                                    layout: {
                                        padding: {
                                            left: 30,
                                            right: 30,
                                            top: 50,
                                            bottom: 10
                                        }
                                    },
                                }
                            });



                        },             //Code runs if the url returns good data
                        error: function (jqXhr, textStatus, errorThrown) {              //2nd part of getJSON method: Chart with predetermined Data and Options is created.
                            var ctx = $('#myChart');
                            var myChart = new Chart(ctx, {
                                type: "bar",
                                data: {
                                    labels: ["DATA"],
                                    datasets: [{
                                        label: 'Percentage of Data found',
                                        data: [100],
                                        backgroundColor: ['rgba(255, 00, 00, 0.5)'],
                                        borderColor: ['rgba(255, 99, 132, 1)'],
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    scales: {
                                        xAxes: [{
                                            barPercentage: .5,
                                            categoryPercentage: 0.5
                                        }],
                                        yAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }]
                                    },
                                    animation: {
                                        duration: 1000,
                                        easing: 'easeInBack'
                                    }
                                },
                                legend: {
                                    display: true
                                }
                            });
                        }             //Code runs if the url returns bad data
                    });
                }
            });
            
        </script> }







